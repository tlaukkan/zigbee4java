package org.bubblecloud.zigbee.v3.zcl.clusters;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.Future;
import org.bubblecloud.zigbee.v3.CommandResult;
import org.bubblecloud.zigbee.v3.ZigBeeApi;
import org.bubblecloud.zigbee.v3.ZigBeeDevice;
import org.bubblecloud.zigbee.v3.zcl.ZclAttribute;
import org.bubblecloud.zigbee.v3.zcl.ZclCluster;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.ResetStartupParametersCommand;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.ResetStartupParametersResponse;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.RestartDeviceCommand;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.RestartDeviceResponseResponse;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.RestoreStartupParametersCommand;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.RestoreStartupParametersResponse;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.SaveStartupParametersCommand;
import org.bubblecloud.zigbee.v3.zcl.clusters.commissioning.SaveStartupParametersResponse;
import org.bubblecloud.zigbee.v3.zcl.protocol.ZclDataType;

/**
 * <b>Commissioning</b> cluster implementation (<i>Cluster ID 0x0015</i>).
 * This code is autogenerated. Modifications may be overwritten!
 */
public class ZclCommissioningCluster extends ZclCluster {
    // Cluster ID
    private static final int CLUSTER_ID = 0x0015;

    // Attribute initialisation
    protected Map<Integer, ZclAttribute> initializeAttributes() {
        Map<Integer, ZclAttribute> attributeMap = new HashMap<Integer, ZclAttribute>(0);


        return attributeMap;
    }

    /**
     * Default constructor.
     */
    public ZclCommissioningCluster(final ZigBeeApi zigbeeApi, final ZigBeeDevice zigbeeDevice) {
        super(zigbeeApi, zigbeeDevice, CLUSTER_ID);
    }



    /**
     * The Restart Device Command
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> restartDeviceCommand() {
        return send(new RestartDeviceCommand());
    }


    /**
     * The Save Startup Parameters Command
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> saveStartupParametersCommand() {
        return send(new SaveStartupParametersCommand());
    }


    /**
     * The Restore Startup Parameters Command
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> restoreStartupParametersCommand() {
        return send(new RestoreStartupParametersCommand());
    }


    /**
     * The Reset Startup Parameters Command
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> resetStartupParametersCommand() {
        return send(new ResetStartupParametersCommand());
    }


    /**
     * The  Restart Device Response Response
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> restartDeviceResponseResponse() {
        return send(new RestartDeviceResponseResponse());
    }


    /**
     * The  Save Startup Parameters Response
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> saveStartupParametersResponse() {
        return send(new SaveStartupParametersResponse());
    }


    /**
     * The  Restore Startup Parameters Response
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> restoreStartupParametersResponse() {
        return send(new RestoreStartupParametersResponse());
    }


    /**
     * The  Reset Startup Parameters Response
     *
     * @return the {@link Future<CommandResult>} command result future
     */
    public Future<CommandResult> resetStartupParametersResponse() {
        return send(new ResetStartupParametersResponse());
    }

}
